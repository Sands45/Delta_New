
# Bed Party Lights
# Party_2
# _Party_Leveling
# _Party_Homing
# _Party_Heating - Heater Bed
# _Party_HeatingEx - Extruder Heating
# _Party_Cleaning
# _Party_Calibrating
# _Party_Printing
# _Party_Idle
# Party_Off
# Party_On

# Logo LED control
#    _statustop_ready
#    statustop_off
#    _statustop_busy
#    _statustop_heating
#    _statustop_leveling
#    _statustop_homing
#    _statustop_cleaning
#    _statustop_meshing
#    _statustop_calibrating_z
#    _statustop_printing

#    Toolhead LEDs
#    _status_ready
#    status_off
#    _status_busy
#    _status_heating
#    _status_leveling
#    _status_homing
#    _status_cleaning
#    _status_meshing
#    _status_calibrating_z
#    _status_printing
#
# With additional macros for basic control:
#
#    _set_nozzle_leds_on
#    _set_nozzle_leds_off
#    _set_logo_leds_off

###################################
# 	Print Start / End
#   https://github.com/jontek2/A-better-print_start-macro
###################################

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}

  SET_DISPLAY_TEXT MSG="Print Started"      # Displays info
  RESPOND TYPE=echo MSG="Print Started"

  M141 S{target_chamber}       # Sets exhaust fan and Chamber targets
    
  _CASELIGHT_ON
  _statustop_ready
  _status_ready
  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  _Party_Homing
  _statustop_homing
  _status_homing
  G28                                                   # Full home (XYZ)
  G90                                                   # Absolut position
  G1 X0 Y0 Z20 F1500                                    # Goes to center of the bed

  BED_MESH_CLEAR                                         # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    RESPOND TYPE=echo MSG="Bed heating to {target_bed}c"
    _Party_Heating
    _statustop_heating
    _status_heating
    M106 S255                                           # Turns on the PT-fan
    G1 X0 Y0 Z20 F1000                                  # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    _statustop_busy
    
    SET_DISPLAY_TEXT MSG="Bed reached {target_bed}c"
    RESPOND TYPE=echo MSG="Bed reached {target_bed}c"
    
    #SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    #RESPOND TYPE=echo MSG="Heatsoak: {target_chamber}c"
    #TEMPERATURE_WAIT SENSOR="temperature_fan Chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

    Chamber_Temp_ABS

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    _Party_Heating
    _statustop_heating
    _status_heating
    M106 S255                                           # Turns on the PT-fan
    G1 X0 Y0 Z25 F1000                                  # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5 min"               # Displays info
    RESPOND TYPE=echo MSG="Soak for 5 min"
    _statustop_busy
    G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  M106 S0                                               # Turn off fan

  _statustop_homing
  _status_homing
  SET_DISPLAY_TEXT MSG="Home and Load Mesh"             # Displays info
  RESPOND TYPE=echo MSG="Load Bed Mesh"
  BED_MESH_PROFILE LOAD=default
  G28

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Displays info
  RESPOND TYPE=echo MSG="Hotend: {target_extruder}c"
  _statustop_heating
  _Party_HeatingEx
  _status_heating
  M107                                                  # Turns off partcooling fan
  M109 S{target_extruder}                               # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printer goes brrr"               # Displays info
  RESPOND TYPE=echo MSG="Printer goes brrr"
  _Party_Printing
  _statustop_printing
  _status_printing
  G0 X-25 Y-65 Z10 F5000                                # Moves to starting point
  G0 Z0.4                                               # Raises Z to 0.4
  G91                                                   # Incremental positioning 
  G1 X50 E10 F500                                       # Purge line
  G90                                                   # Absolute position

[gcode_macro PRINT_END]
gcode:
  # Turn off bed, extruder, and fan
  TURN_OFF_HEATERS
  M141 S35                       # Chamber to 35c
  M104 S0                        # Hotend off
  M106 S0                        # Part cooling Fan Off
  M140 S0                        # Bed off
  SET_DISPLAY_TEXT MSG="Th-Th-That's All Folks"               # Displays info
  _statustop_busy
  G91                            # Relative positionning
  G1 Z0.2 E-2 F2000              # Retract and raise Z
  G1 X5 Y5 F3000                 # Wipe out
  G1 Z5 F3000                    # Raise Z more
  G90                            # Absolute positioning
  G28                            # Home
  G1 Z130 F600                   # Move down a little
  G1 Y35 F600                    # Move back a little 
  M84                            # Disable steppers
  statustop_off
  Party_2                        # Party Lights
  G4 P120000                     # Play Party for 2 minutes
  BED_MESH_CLEAR
  Lights_Off

##################################
#    Home
##################################

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
      _status_homing
      G28
      _status_ready
    {% endif %}

#[homing_override]
#  Ohh pretty lights. 
#axes: xyz
#gcode:
#  _status_homing
#  G4 P2500
#  status_off

##################################
#    Purge Line in an Arc
##################################

[gcode_macro PURGE]
Description: Purge Line
gcode:
   G92 E0 ;Zero Extruder
   G0 X-25 Y-65 Z10 F4000
   G0 Z0.4 F300
   G3 X25 Y-65 I65 Z0.4 E10 F600 ; lay arc stripe 90deg - removed extruder for testing.
   G1 E-1 F500 ; Retract a little
   G0 Z10 ;Set Z to 1mm
   G92 E0 ;Zero Extruder

[gcode_arcs]
#resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.


##################################
#    Filament Load
##################################

[gcode_macro LOAD_FILAMENT]
gcode:
  _status_ready
  _CG28
  G1 X0 Y-50 Z100 F2000
  _Party_HeatingEx
  _status_heating
  M109 S240             # set temp to 240 and wait
  _statustop_ready
  _status_ready
  M83                   # Put the extruder into relative mode
  G92 E0.0              # Reset the extruder so that it thinks it is at position zero
  G1 E50 F350           # Move the extruder forward 50mm at a speed of 350mm/minute
  G92 E0.0              # Reset the extruder again
  M82                   # Put the extruder back into absolute mode.
  G28
  M84

[gcode_macro UNLOAD_FILAMENT]
gcode:
  _status_ready
  _CG28
  G1 X0 Y-50 Z100 F2000
  _Party_HeatingEx
  _status_heating
  M109 S250             # set temp to 240 and wait
  _statustop_ready
  _status_ready
  M83                   # Put the extruder into relative mode
  G92 E0.0              # Reset the extruder so that it thinks it is at position zero
  G1 E10 F300           # extrude a little to soften tip
  G1 E-10 F1500         # jerk the filament out of the melt zone
  G1 E-50 F350          # Move the extruder backwards 50mm at a speed of 350mm/minute
  G1 E-50 F350          # Move the extruder backwards 50mm at a speed of 350mm/minute
  G92 E0.0              # Reset the extruder again
  M82                   # Put the extruder back into absolute mode.
  M84

##################################
#    In print Macros
##################################

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(-50) %}       #edit to your park position
    {% set y = params.Y|default(0) %}         #edit to your park position
    {% set z = params.Z|default(100)|float %} #edit to your park position
    {% set e = params.E|default(1) %}         #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:

    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    G91                      # Relative positionning
    G1 Z0.2 E-2 F2400        # Retract and raise Z
    G1 X5 Y5 F3000           # Wipe out
    G1 Z10                   # Raise Z more
    G90                      # Absolute positionning
    G1 X0 Y50 Z150           # Park the Head
    M84                      # Disable steppers
    status_off
    statustop_off
    Party_Off

###################################
## 	Chamber Temp Control
##
##  https://github.com/zellneralex/klipper_config/blob/master/fan.cfg
##  https://github.com/claudermilk/TridentBackup/blob/master/fans.cfg
###################################

[gcode_macro M141]
description: Set temperature of Chamber fan
gcode: SET_TEMPERATURE_FAN_TARGET temperature_fan=Chamber_Fan target={params.S|default(0)}

[gcode_macro Chamber_Temp_ABS]
description: Set temperature of Chamber fan to a higher value
gcode:
  RESPOND TYPE=echo MSG="Heat Soak Chamber to 30c for ABS"
  SET_TEMPERATURE_FAN_TARGET temperature_fan=Chamber_Fan target=30
  TEMPERATURE_WAIT SENSOR="temperature_fan Chamber_Fan" MINIMUM=30   # Waits for Chamber to reach desired temp
  RESPOND TYPE=echo MSG="Chamber temp to 30c for ABS"

###################################
#   Caselights
#   Caselight pin definition in printer.cfg
###################################

[gcode_macro _CASELIGHT_ON]
description: Helper: Light On
gcode:
    SET_PIN PIN=Light_Chamber VALUE=0.6
    {action_respond_info("Caselights On")}
    
[gcode_macro _CASELIGHT_OFF]
description: Helper: Light Off
gcode:
    SET_PIN PIN=Light_Chamber VALUE=0.0
  {action_respond_info("Caselights Off")}

[gcode_macro CASE_LIGHTS]
description: Toggle Light
gcode: 
    {% if printer['output_pin Light_Chamber'].value == 0 %} 
        _CASELIGHT_ON
    {% else %} 
        _CASELIGHT_OFF 
    {% endif %}

[gcode_macro Lights_Off]
gcode:
    _CASELIGHT_OFF
    Party_Off
    statustop_off
    status_off

#################################
# from: https://klipper.discourse.group/t/interruptible-heat-soak/1552
# Heat Soak Code
#################################

[gcode_macro CENTER]
description: move Toolhead to centered Position
gcode:
    _status_homing
    _Party_Homing
    _CG28
    G0 X0 Y0 Z25 F3500

[gcode_macro HEAT_SOAK]
description: Heats the Bed for a While

variable_target_temp: 0
variable_stage: None ## heating -> soaking -> done -> None
## in seconds
variable_check_interval: 10
variable_soak_time_remaining: 0
variable_total_time_elapsed: 0

gcode:

    {% set TARGET = params.TARGET | default(105) | float %}
    {% set DURATION = (params.DURATION | default(30) | int) * 60 %} ## minutes to seconds
    
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE={ TARGET }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage               VALUE="'heating'"
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ DURATION }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0

    M141 S55                   # Set chamber to 55*C

    _statustop_heating
    _Party_Heating
    _CASELIGHT_ON
    _status_homing

    ;; fire up the heater
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ TARGET }
    _CG28
    G0 X0 Y0 Z20 F3500        # move head to center of bed
    _status_ready
    M84                       # turn off steppers
    M106 S250                 # set part cooling fan to full speed, helps circulate Chamber air
    UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ check_interval }

[gcode_macro CANCEL_HEAT_SOAK]
description: cancels an in-progress HEAT_SOAK cycle
gcode:
    SET_DISPLAY_TEXT MSG="Heat Soak Canceled"           # Displays info
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'cancel'"
    UPDATE_DELAYED_GCODE ID=heat_soaker DURATION=1
    Lights_Off

[delayed_gcode heat_soaker]
; ## debug
; { action_respond_info( printer['gcode_macro HEAT_SOAK'] | tojson )}
gcode:
    {% set heat_soak = printer['gcode_macro HEAT_SOAK'] %}

    ## update total time elapsed
    {% set total_time_elapsed = heat_soak.total_time_elapsed + heat_soak.check_interval %}
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed VALUE={ total_time_elapsed }

    {% set stage = heat_soak.stage %}
    {% if stage == "heating" and printer.heater_bed.temperature >= heat_soak.target_temp %}
        {% set stage = "soaking" %}
    {% endif %}

    {% if stage == "soaking" %}
        ## update soak countdown
        {% set soak_time_remaining = [heat_soak.soak_time_remaining - heat_soak.check_interval, 0] | max %}
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ soak_time_remaining }

        {% if soak_time_remaining == 0 %}
            {% set stage = "done" %}
        {% endif %}
    {% endif %}

    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'{ stage }'"

    {% if stage in ("done", "cancel") %}

        {% if stage == "cancel" %}
            {% set stage = "done" %}
            TURN_OFF_HEATERS
            M107 ; turn off fan
            M141 S35 # Set chamber to 35*C
            statustop_off
            

            M117 { "soak cancelled after ~%.1fm" | format(total_time_elapsed / 60.0) }
        {% else %}
            M117 { "soak complete after %.1fm" | format(total_time_elapsed / 60.0) }
        {% endif %}

        ## reset all state vars, except stage, which may be queried via the api
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0

    {% else %}

        {% if total_time_elapsed % 90 == 0 %}
            ## output status periodically
            {% if stage == "heating" %}
                M117 { "Heating - %.1fmin elapsed" | format(total_time_elapsed / 60.0) }
            {% elif stage == "soaking" %}
                M117 { "Soaking - %.1fmin remaining" | format(soak_time_remaining / 60.0) }
            {% endif %}
        {% endif %}

        ## trigger ourselves again
        UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ heat_soak.check_interval }

        ## dwell for 1ms to prevent from going idle
        G4 P1

    {% endif %}

#################################
# from: https://github.com/RomRider/klipper-FastGyroidInfill
# Gyroid fast infill
#################################

[gcode_macro _USE_INFILL_SQV]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set sqv = svv.infill_sqv | default(printer.configfile.settings.printer.square_corner_velocity, true) %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={ sqv }

[gcode_macro _USE_NORMAL_SQV]
gcode:
    {% set sqv = printer.configfile.settings.printer.square_corner_velocity %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={ sqv }

[gcode_macro SET_INFILL_SQV]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set val = params.SQV|default(svv.infill_sqv|default(printer.configfile.settings.printer.square_corner_velocity, true), true) | int %}
    SAVE_VARIABLE VARIABLE=infill_sqv VALUE={val}

